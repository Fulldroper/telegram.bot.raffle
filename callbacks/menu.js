module.exports.run = async function (call) {
  const settings = (await this.db.get(`${this.name}:settings`)) || {
    ref_count: 1,
    condition: "–£—Å–ª–æ–ª–≤–∏–π –Ω–µ—Ç",
  };

  let exist = await this.db.get(`${this.name}:${call.from.id}:ref_counter`)
  const exist_ch = await this.db.get(`${this.name}:op`) || []
  const n_exist_ch = []

  for (const chat of exist_ch) {
    if (!['administrator','member', 'creator'].includes(
        (await this.this.telegram.getChatMember(chat.id, call.from.id)).status)
      ) {
      n_exist_ch.push(chat)
    }
  }

  if (n_exist_ch.length > 0) {
    this.telegram.sendMessage(call.message.chat.id,`‚ùå<b>–û–π, —á—Ç–æ —Ç–æ –Ω–µ —Ç–∞–∫.</b> –ü–æ–∂–∞–ª—É–π—Å—Ç–∞ –ø—Ä–æ–≤–µ—Ä—å—Ç–µ,  –ø–æ–¥–ø–∏—Å–∞–ª–∏—Å—å –ª–∏ –≤—ã –Ω–∞ –≤—Å–µ –∫–∞–Ω–∞–ª—ã`,{parse_mode: "HTML"})
    return
  }

  if (!exist) {
    const ticket = await this.newTicket({type: "sys-gift", user: call.from})
    await this.db.inc(`${this.name}:${call.from.id}:ref_counter`)
    await this.db.push(`${this.name}:${call.from.id}:tikets`, ticket[0])
    this.telegram.sendMessage(
      call.message.chat.id,
      `üéâ–ë–ª–∞–≥–æ–¥–∞—Ä–∏–º –í–∞—Å –∑–∞ –ø–æ–¥–ø–∏—Å–∫—É –Ω–∞ –≤—Å–µ –∫–∞–Ω–∞–ª—ã. –í—ã –ø–æ–ª—É—á–∞–µ—Ç–µ –≤–∞—à –ø–µ—Ä–≤—ã–π –±–∏–ª–µ—Ç! –ù–æ–º–µ—Ä –≤–∞—à–µ–≥–æ –±–∏–ª–µ—Ç–∞ ${ticket[0]}`
    );
  }

  const buttons = {
    parse_mode: "HTML",
    reply_markup: JSON.stringify({
      inline_keyboard: [
        [
          { text: "üéü –ú–æ–∏ –±–∏–ª–µ—Ç—ã", callback_data: "list" },
          { text: "üé´ –ö—É–ø–∏—Ç—å –±–∏–ª–µ—Ç—ã", callback_data: "buy" },
        ],
        [{ text: "üîó–ü–æ–ª—É—á–∏—Ç—å –±–∏–ª–µ—Ç—ã", callback_data: "ref" }],
      ],
    }),
  };
  this.telegram.sendMessage(
    call.message.chat.id,
    `<b>‚ö°Ô∏è–£—Å–ª–æ–≤–∏—è —Ä–æ–∑—ã–≥—Ä—ã—à–∞:</b>\n${settings.condition}\n–ß—Ç–æ–±—ã –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –±–∏–ª–µ—Ç—ã –∏–ª–∏ –Ω–∞–±—Ä–∞—Ç—å –±–æ–ª—å—à–µ –±–∏–ª–µ—Ç–æ–≤, –≤–æ—Å–ø–æ–ª—å–∑—É–π—Ç–µ—Å—å –∫–Ω–æ–ø–∫–∞–º–∏ –Ω–∏–∂–µüëá`,
    buttons
  );
};